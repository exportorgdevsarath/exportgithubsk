name: dev-deploy
description: dev-deploy action for the pipeline

inputs:
  CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT:
    required: true

  SERVICE_ACCOUNT_KEYFILE_JSON:
    required: true

  PROJECT_ID:
    required: true

  CLOUD_FUN_MEMORY:
    required: true

  CLOUD_FUN_REGION:
    required: true

  CLOUD_FUN_RUNTIME:
    required: true

  CLOUD_FUN_TIMEOUT:
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up environment variables
      shell: bash
      run: |
        echo "CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT=${{ github.event.inputs.CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT }}" >> $GITHUB_ENV
        echo "SERVICE_ACCOUNT_KEYFILE_JSON=${{ github.event.inputs.SERVICE_ACCOUNT_KEYFILE_JSON }}" >> $GITHUB_ENV
        echo "PROJECT_ID=${{ github.event.inputs.PROJECT_ID }}" >> $GITHUB_ENV
        echo "CLOUD_FUN_MEMORY=${{ github.event.inputs.CLOUD_FUN_MEMORY }}" >> $GITHUB_ENV
        echo "CLOUD_FUN_REGION=${{ github.event.inputs.CLOUD_FUN_REGION }}" >> $GITHUB_ENV
        echo "CLOUD_FUN_RUNTIME=${{ github.event.inputs.CLOUD_FUN_RUNTIME }}" >> $GITHUB_ENV
        echo "CLOUD_FUN_TIMEOUT=${{ github.event.inputs.CLOUD_FUN_TIMEOUT }}" >> $GITHUB_ENV
        echo "DEPLOY_CLOUD_FUNCTION=${{ github.event.inputs.DEPLOY_CLOUD_FUNCTION }}" >> $GITHUB_ENV
        
        # Mask the sensitive values
        echo "::add-mask::${{ github.event.inputs.CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT }}"
        echo "::add-mask::${{ github.event.inputs.SERVICE_ACCOUNT_KEYFILE_JSON }}"
        echo "::add-mask::${{ github.event.inputs.PROJECT_ID }}"
        echo "::add-mask::${{ github.event.inputs.CLOUD_FUN_MEMORY }}"
        echo "::add-mask::${{ github.event.inputs.CLOUD_FUN_REGION }}"
        echo "::add-mask::${{ github.event.inputs.CLOUD_FUN_RUNTIME }}"
        echo "::add-mask::${{ github.event.inputs.CLOUD_FUN_TIMEOUT }}"
        echo "::add-mask::${{ github.event.inputs.DEPLOY_CLOUD_FUNCTION }}"

    - name: Debug DEPLOY_CLOUD_FUNCTION
      shell: bash
      run: |
        echo "CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT is set to '$CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT'"
        echo "SERVICE_ACCOUNT_KEYFILE_JSON is set to '$SERVICE_ACCOUNT_KEYFILE_JSON'"
        echo "PROJECT_ID is set to '$PROJECT_ID'"
        echo "CLOUD_FUN_MEMORY is set to '$CLOUD_FUN_MEMORY'"
        echo "CLOUD_FUN_REGION is set to '$CLOUD_FUN_REGION'"
        echo "CLOUD_FUN_RUNTIME is set to '$CLOUD_FUN_RUNTIME'"
        echo "CLOUD_FUN_TIMEOUT is set to '$CLOUD_FUN_TIMEOUT'"
        echo "DEPLOY_CLOUD_FUNCTION is set to '$DEPLOY_CLOUD_FUNCTION'"
        
    - name: Deploying image...
      shell: bash
      run: |
        echo "CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT is set to ${{ inputs.CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT }}"
        echo "SERVICE_ACCOUNT_KEYFILE_JSON is set to ${{ inputs.SERVICE_ACCOUNT_KEYFILE_JSON }}"
        echo "PROJECT_ID is set to ${{ inputs.PROJECT_ID }}"
        echo "CLOUD_FUN_MEMORY is set to ${{ inputs.CLOUD_FUN_MEMORY }}"
        echo "CLOUD_FUN_REGION is set to ${{ inputs.CLOUD_FUN_REGION }}"
        echo "CLOUD_FUN_RUNTIME is set to ${{ inputs.CLOUD_FUN_RUNTIME }}"
        echo "CLOUD_FUN_TIMEOUT is set to ${{ inputs.CLOUD_FUN_TIMEOUT }}"
        echo "DEPLOY_CLOUD_FUNCTION is set to ${{ inputs.DEPLOY_CLOUD_FUNCTION }}"
        export CLOUDSDK_CORE_DISABLE_PROMPTS=1
        gcloud beta run deploy exportgithubsk \
            --use-http2 \
            --service-account=${{ inputs.CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT }} \
            --image=europe-west1-docker.pkg.dev/vb-eva-gen/exportgithubsk-repository/exportgithubsk \
            --vpc-connector=projects/vb-eva-gen/locations/europe-west1/connectors/eva-modeller \
            --region=europe-west1 \
            --platform=managed \
            --timeout=600s \
            --concurrency=80 \
            --cpu-boost \
            --no-use-http2 \
            --allow-unauthenticated \
            --quiet \
            --vpc-egress=private-ranges-only \
            --user-output-enabled \
            --port=9090 \
            --max-instances=10 \
            --min-instances=0 \
            --cpu=2 \
            --memory=1Gi \
            --set-env-vars JAVA_TOOL_OPTIONS="-Xss256k" \
            --execution-environment=gen2 \
            --update-secrets=SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID=SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID:latest,SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET=SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET:latest

    - name: Debug DEPLOY_CLOUD_FUNCTION
      shell: bash
      run: |
        echo "DEPLOY_CLOUD_FUNCTION is set to " $DEPLOY_CLOUD_FUNCTION
        
    - name: Install zip
      if: env.DEPLOY_CLOUD_FUNCTION == 'true'
      shell: sh
      run: |
        apk add --no-cache zip

    - name: Build the cloud function
      if: env.DEPLOY_CLOUD_FUNCTION == 'true'
      shell: bash
      run: |
        mkdir -p deployment
        cd BackendApp/src/functions/java
        mvn clean package
        ls -l target
        cp target/csv-to-excel-dev-function-1.0-SNAPSHOT.jar ../../../../deployment/
        cp -r src ../../../../deployment/src/
        cp pom.xml ../../../../deployment/
        cd ../../../../deployment
        zip -r ../csv-to-excel-function-deployment.zip .
        cd ..
        
        # Upload to Google Cloud Storage
        gsutil cp csv-to-excel-function-deployment.zip gs://vb-eva-gen-configuration/cloudfunctions/
        # Deploy Cloud Function
        gcloud functions deploy CSVToExcelHubFunction --gen2 --service-account=${{ inputs.CLOUD_RUN_DEFAULT_SERVICE_ACCOUNT }} --entry-point com.vb.csvtoexcel.CSVToExcelFunction --runtime java17 --trigger-http --memory 2048MB --timeout 540s --region europe-west1 --source gs://vb-eva-gen-configuration/cfunction/csv-to-excel-function-deployment.zip
